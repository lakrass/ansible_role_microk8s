- name: Make sure snapd is installed
  package:
    name:
      - snapd
    state: latest
  become: yes
  when: ansible_distribution != 'Archlinux'

- name: Make sure snapd is installed
  pacman:
    name:
      - snapd
    state: present
  become: yes
  when: ansible_distribution == 'Archlinux'

- name: Check if is raspberry
  shell: "uname -r"
  register: uname
  changed_when: false

- name: Install raspberry specific packages
  package:
    name:
      - linux-modules-extra-raspi
    state: latest
  when: uname.stdout | regex_search('raspi')

- name: Install microk8s
  become: yes
  snap:
    name: microk8s
    classic: yes
    channel: "{{ microk8s_version }}"

- name: Sideload images
  include_tasks: sideload-images.yml
  when: microk8s_cached_images_tar != None and microk8s_cached_images_tar is file

- name: Wait for microk8s to be ready
  become: yes
  command: "{{ microk8s_bin_path }}microk8s.status --wait-ready"
  changed_when: false
  register: mk8sstatusout
  failed_when:
    - "'This MicroK8s deployment is acting as a node in a cluster.' not in mk8sstatusout.stdout_lines"
    - mk8sstatusout.rc > 0

- name: Create kubectl alias
  become: yes
  command: "snap alias microk8s.kubectl kubectl"
  changed_when: false
  register: aliaskubectlout

- name: Create helm3 alias
  become: yes
  command: "snap alias microk8s.helm3 helm"
  changed_when: false
  register: aliashelmout
  when:
    - "'helm3' in microk8s_plugins"
    - microk8s_plugins.helm3

- name: Create custom certificates
  become: yes
  ansible.builtin.template:
    src: "{{ microk8s_csr_template }}"
    dest: /var/snap/microk8s/current/certs/csr.conf.template
    mode: 0644
  when: microk8s_csr_template != None and microk8s_csr_template is file
  notify:
    - Refresh certs
  register: custom_certs

- name: Create folder for microk8s certificates
  become: yes
  file:
    path: /usr/share/ca-certificates/extra
    state: directory
    mode: 0755
  when: custom_certs.changed

- name: Copy certificates
  become: yes
  copy:
    src: "{{ item }}"
    dest: /usr/share/ca-certificates/extra
    remote_src: yes
    force: yes
    mode: 0644
  with_fileglob:
    - /var/snap/microk8s/current/certs/*ca*.crt
  when: custom_certs.changed

- name: Trust certificates generated by microk8s
  become: yes
  command: "update-ca-certificates"
  register: command_result
  changed_when: "'0 added, 0 removed' not in command_result.stdout"
  when: custom_certs.changed
